{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PreetADFTutorialDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LoadDimension')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FetchAirline",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "FetchCarrier",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "LoadData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FetchCarrier",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "Airline DW"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FetchAirline')]",
				"[concat(variables('factoryId'), '/dataflows/FetchCarrier')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CarrirerDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destination",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Airline DS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IdCarrier",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CarrierName",
						"type": "varchar"
					},
					{
						"name": "IdAirline",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dimCarrierName"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgcarriername')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "stgcarriername"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FetchAirline')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Airline DF"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Airline_SQL_Dump",
								"type": "DatasetReference"
							},
							"name": "FetchDimAirline"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dimAirlineDS",
								"type": "DatasetReference"
							},
							"name": "DimAirlineDestination"
						}
					],
					"transformations": [
						{
							"name": "DistinctData"
						}
					],
					"script": "source(output(\n\t\tAirport_Code as string,\n\t\tAirport_Name as string,\n\t\tTime_Label as string,\n\t\tTime_Month as string,\n\t\tTime_Month_Name as string,\n\t\tTime_Year as string,\n\t\t{Statistics_#_of_Delays_Carrier} as string,\n\t\t{Statistics_#_of_Delays_Late_Aircraft} as string,\n\t\t{Statistics_#_of_Delays_National_Aviation_System} as string,\n\t\t{Statistics_#_of_Delays_Security} as string,\n\t\t{Statistics_#_of_Delays_Weather} as string,\n\t\tStatistics_Carriers_Names as string,\n\t\tStatistics_Carriers_Total as string,\n\t\tStatistics_Flights_Cancelled as string,\n\t\tStatistics_Flights_Delayed as string,\n\t\tStatistics_Flights_Diverted as string,\n\t\tStatistics_Flights_On_Time as string,\n\t\tStatistics_Flights_Total as string,\n\t\tStatistics_Minutes_Delayed_Carrier as string,\n\t\tStatistics_Minutes_Delayed_Late_Aircraft as string,\n\t\tStatistics_Minutes_Delayed_National_Aviation_System as string,\n\t\tStatistics_Minutes_Delayed_Security as string,\n\t\tStatistics_Minutes_Delayed_Total as string,\n\t\tStatistics_Minutes_Delayed_Weather as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> FetchDimAirline\nFetchDimAirline aggregate(groupBy(Airport_Code,\n\t\tAirport_Name),\n\tAirportCount = count(Airport_Code)) ~> DistinctData\nDistinctData sink(input(\n\t\tIdairline as integer,\n\t\tairlinename as string,\n\t\tairlinecode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tairlinecode = Airport_Code,\n\t\tairlinename = Airport_Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimAirlineDestination"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FetchCarrier')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Airline DF"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dimAirlineDS",
								"type": "DatasetReference"
							},
							"name": "DIMAirline"
						},
						{
							"dataset": {
								"referenceName": "Airline_SQL_Dump",
								"type": "DatasetReference"
							},
							"name": "FetchCarrier"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CarrirerDS",
								"type": "DatasetReference"
							},
							"name": "DimCarrier"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						}
					],
					"script": "source(output(\n\t\tIdairline as integer,\n\t\tairlinename as string,\n\t\tairlinecode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMAirline\nsource(output(\n\t\tAirport_code as string,\n\t\tvalue as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select distinct Cast(Airport_code as varchar(5)) as Airport_code,value  from airline_dump\\ncross apply string_split([Statistics_Carriers_Names],\\',\\')',\n\tformat: 'query') ~> FetchCarrier\nDIMAirline, FetchCarrier join(airlinecode == Airport_code,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(input(\n\t\tIdCarrier as integer,\n\t\tCarrierName as string,\n\t\tIdAirline as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tIdAirline = Idairline,\n\t\tCarrierName = value\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimCarrier"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CarrirerDS')]"
			]
		}
	]
}