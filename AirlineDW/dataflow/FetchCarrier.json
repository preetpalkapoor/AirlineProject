{
	"name": "FetchCarrier",
	"properties": {
		"folder": {
			"name": "Airline DF"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dimAirlineDS",
						"type": "DatasetReference"
					},
					"name": "DIMAirline"
				},
				{
					"dataset": {
						"referenceName": "Airline_SQL_Dump",
						"type": "DatasetReference"
					},
					"name": "FetchCarrier"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CarrirerDS",
						"type": "DatasetReference"
					},
					"name": "DimCarrier"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				}
			],
			"script": "source(output(\n\t\tIdairline as integer,\n\t\tairlinename as string,\n\t\tairlinecode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DIMAirline\nsource(output(\n\t\tAirport_code as string,\n\t\tvalue as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select distinct Cast(Airport_code as varchar(5)) as Airport_code,value  from airline_dump\\ncross apply string_split([Statistics_Carriers_Names],\\',\\')',\n\tformat: 'query') ~> FetchCarrier\nDIMAirline, FetchCarrier join(airlinecode == Airport_Code,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 sink(input(\n\t\tIdCarrier as integer,\n\t\tCarrierName as string,\n\t\tIdAirline as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tIdAirline = Idairline,\n\t\tCarrierName = value\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimCarrier"
		}
	}
}